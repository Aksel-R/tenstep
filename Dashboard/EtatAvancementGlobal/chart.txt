<div id="myChartGra" style="overflow: hidden;margin-top: 5%;height=300px"></div>
#myChart {
  //height:100%;
  width:100%;
  height:200px;
}

.zc-ref {
  display: none;
}
div#myChart-license-text {
    display: none;
}
div#myChart-wrapper {
    height: 200px;
}
.ms-rtestate-field h1, h1.ms-rteElement-H1, .ms-rtestate-field h2, h2.ms-rteElement-H2 {
    line-height: 1.4;
    color: #777777;
}
div#myChartGra-license-text {
    display: none;
}
div#myChartGra-license-text {
    display: none;
}

div#myChartGra-wrapper {
    height: 375px;
}
div#myChartGraPan {
    max-height: 385px;
} 
function jaugeDelais(consomationPrevue){
                    var valeur=[consomationPrevue];
                    var myConfig = {
                              type: "gauge",
                              globals: {
                                fontSize: 10,
                                'background-color':'transparent'
                              },
                              plotarea:{
                                marginTop:15,
                              },
                              plot:{
                                size:'100%',
                                valueBox: {
                                  placement: 'center',
                                  text:'%v', //default
                                  fontSize:15,
                                  rules:[
                                    {
                                      rule: '%v >= 90',
                                      text: '%v<br>ÉLEVÉ'
                                    },
                                    {
                                      rule: '%v <= 90 && %v > 60',
                                      text: '%v<br>ASSEZ ÉLEVÉ'
                                    },
                                    {
                                      rule: '%v <= 60 && %v > 30',
                                      text: '%v<br>MOYEN'
                                    },
                                    {
                                      rule: '%v <=  30',
                                      text: '%v<br>FAIBLE'
                                    }   
                                  ]
                                }
                              },
                              tooltip:{
                                borderRadius:5
                              },
                              scaleR:{
                                aperture:180,
                                minValue:0,
                                maxValue:100,
                                step:10,
                                center:{
                                  visible:false
                                },
                                tick:{
                                  visible:false
                                },
                                item:{
                                  offsetR:0,
                                  rules:[
                                    {
                                      rule:'%i == 9',
                                      offsetX:15
                                    }
                                  ]
                                },
                                labels:['0','10','20','30','40','50','60','70','80','90','100'],
                                ring:{
                                  size:25,
                                  rules:[
                                    {
                                      rule:'%v < 30',
                                      backgroundColor:'#5cb85c'
                                    },
                                    {
                                      rule:'%v >= 30 && %v < 60',
                                      backgroundColor:'#337ab7'
                                    },
                                    {
                                      rule:'%v >= 60 && %v < 90',
                                      backgroundColor:'#FFA726'
                                    },
                                    {
                                      rule:'%v >= 90',
                                      backgroundColor:'#E53935'
                                    }      
                                  ]
                                }
                              },
                              refresh:{ 
                                  type:"feed",
                                  transport:"js",
                                  url:"feed()",
                                  interval:10,
                                  resetTimeout:10
                              },
                              series : [
                                {
                                  values : [parseInt(consomationPrevue)], // starting value
                                  backgroundColor:'black',
                                  indicator:[5,5,5,5,0.75],
                                  animation:{ 
                                    effect:2,
                                    method:1,
                                    sequence:4,
                                    speed: 900
                                 },
                                }
                              ]
                            };
                             
                            zingchart.render({ 
                              id : 'myChart', 
                              data : myConfig, 
                              height: 250, 
                              width: '100%'
                            });
                  }


<div id="myChartGra" style="overflow: hidden;margin-top: 5%;height=300px"></div>

function loadTabGravRisk(arrNomP,arrayStat,arrayScore,arrayProba,arrayImpacts,arrayDateDec){
           var sumScore=0;
           var avgScore=0;
           var countSc=0;
          for (var i = 0; i < arrayScore.length; i++) {
            if (arrayStat[i]!="") {
              countSc++;
              sumScore=parseFloat(sumScore)+parseFloat(arrayScore[i]);
              ////console.log("arrayScore[i]= "+arrayScore[i]);
            }            
          }
          avgScore=parseFloat(sumScore/countSc).toFixed(0);
          ////console.log("avgScore= "+avgScore);
          //scoreRisk();
          var valeur=[avgScore];
                    var myConfig = {
                              type: "gauge",
                              globals: {
                                fontSize: 20,
                                'background-color':'transparent'
                              },

                              plotarea:{
                                marginTop: 0,
                              },
                              plot:{
                                size:'100%',
                                valueBox: {
                                  placement: 'center',
                                  text:'%v', //default
                                  fontSize:30,
                                  rules:[
                                    {
                                      rule: '%v > 12',
                                      text: '%v<br>ÉLEVÉ'
                                    },
                                    
                                    {
                                      rule: '%v <= 12 && %v >= 6',
                                      text: '%v<br>MOYEN'
                                    },
                                    {
                                      rule: '%v <=  5',
                                      text: '%v<br>FAIBLE'
                                    }   
                                  ]
                                }
                              },
                              tooltip:{
                                borderRadius:5
                              },
                              scaleR:{
                                aperture:180,
                                minValue:0,
                                maxValue:25,
                                step:3,
                                center:{
                                  visible:false
                                },
                                tick:{
                                  visible:false
                                },
                                item:{
                                  offsetR:0,
                                  rules:[
                                    {
                                      rule:'%i == 9',
                                      offsetX:15
                                    }
                                  ]
                                },
                                labels:['0','','6','','12','','','','','25'],
                                ring:{
                                  size:60,
                                  rules:[
                                    {
                                      rule:'%v <= 5',
                                      backgroundColor:'#5cb85c'
                                    },
                                    
                                    {
                                      rule:'%v >= 6 && %v <= 12',
                                      backgroundColor:'#FFA726'
                                    },
                                    {
                                      rule:'%v > 12',
                                      backgroundColor:'#E53935'
                                    }      
                                  ]
                                }
                              },
                              refresh:{  
                                  type:"feed",
                                  transport:"js",
                                  url:"feed()",
                                  interval:10,
                                  resetTimeout:10
                              },
                              series : [
                                {
                                  values : [parseInt(avgScore)], // starting value
                                  backgroundColor:'black',
                                  indicator:[15,5,5,5,0.75],
                                  animation:{  
                                    effect:2,
                                    method:2,
                                    sequence:4,
                                    speed: 900
                                 },
                                }
                              ]
                            };
                             
                            zingchart.render({ 
                              id : 'myChartGra', 
                              data : myConfig, 
                              /*height: 550, */
                              width: '100%'
                            });
        }
